{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { plantListReducer, plantDetailsReducer } from './reducers/plantReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nimport { orderSubscribe } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  plantList: plantListReducer,\n  plantDetails: plantDetailsReducer,\n  userLogin: userLoginReducer,\n  orderSubscribe: orderSubscribe\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst intialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","legacy_createStore","createStore","thunk","composeWithDevTools","plantListReducer","plantDetailsReducer","userLoginReducer","orderSubscribe","reducer","plantList","plantDetails","userLogin","userInfoFromStorage","localStorage","getItem","JSON","parse","intialState","userInfo","middleware","store"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/src/store.js"],"sourcesContent":[" import { combineReducers, applyMiddleware } from \"redux\";\r\n import { legacy_createStore as createStore } from 'redux'\r\n import thunk from 'redux-thunk';\r\n import { composeWithDevTools } from \"redux-devtools-extension\";\r\n import { plantListReducer, plantDetailsReducer } from './reducers/plantReducers';\r\n import { userLoginReducer } from './reducers/userReducers'\r\nimport { orderSubscribe } from \"./reducers/orderReducers\";\r\n\r\n\r\n const reducer = combineReducers({\r\n     plantList: plantListReducer,\r\n     plantDetails: plantDetailsReducer,\r\n     userLogin: userLoginReducer,\r\n     orderSubscribe: orderSubscribe,\r\n })\r\n\r\n const userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n const intialState = {\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n }\r\n\r\n const middleware = [thunk]\r\n\r\n const store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n export default store\r\n"],"mappings":"AAAC,SAASA,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,0BAA0B;AAChF,SAASC,gBAAgB,QAAQ,yBAAyB;AAC3D,SAASC,cAAc,QAAQ,0BAA0B;AAGxD,MAAMC,OAAO,GAAGV,eAAe,CAAC;EAC5BW,SAAS,EAAEL,gBAAgB;EAC3BM,YAAY,EAAEL,mBAAmB;EACjCM,SAAS,EAAEL,gBAAgB;EAC3BC,cAAc,EAAEA;AACpB,CAAC,CAAC;AAEF,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACzDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEtD,MAAMG,WAAW,GAAG;EACjBN,SAAS,EAAE;IAACO,QAAQ,EAAEN;EAAmB;AAC5C,CAAC;AAED,MAAMO,UAAU,GAAG,CAACjB,KAAK,CAAC;AAE1B,MAAMkB,KAAK,GAAGnB,WAAW,CAACO,OAAO,EAAES,WAAW,EAAEd,mBAAmB,CAACJ,eAAe,CAAC,GAAGoB,UAAU,CAAC,CAAC,CAAC;AAEpG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}