{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arwin Miclat\\\\Desktop\\\\Botano\\\\Botano\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar(_ref) {\n  _s();\n  let {\n    placeholder,\n    data\n  } = _ref;\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState('');\n  const handleFilter = event => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    const newFilter = data.filter(value => {\n      return value.toLowerCase().includes(searchWord.toLowerCase());\n    });\n    if (searchWord === '') {\n      setFilteredData([]);\n    } else {\n      setFilteredData(newFilter);\n    }\n  };\n  const handleClick = value => {\n    setWordEntered(value);\n    setFilteredData([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchInputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: placeholder,\n        value: wordEntered,\n        onChange: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), filteredData.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataResults\",\n      children: filteredData.slice(0, 5).map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleClick(value),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"5nkvNV3Q6psVy0Z4RNjCFRkW3hs=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","SearchBar","placeholder","data","filteredData","setFilteredData","wordEntered","setWordEntered","handleFilter","event","searchWord","target","value","newFilter","filter","toLowerCase","includes","handleClick","length","slice","map","index"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar({ placeholder, data }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [wordEntered, setWordEntered] = useState('');\r\n\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    const newFilter = data.filter((value) => {\r\n      return value.toLowerCase().includes(searchWord.toLowerCase());\r\n    });\r\n\r\n    if (searchWord === '') {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n\r\n  const handleClick = (value) => {\r\n    setWordEntered(value);\r\n    setFilteredData([]);\r\n  };\r\n\r\n  return (\r\n    <div className='search'>\r\n      <div className='searchInputs'>\r\n        <input type='text' placeholder={placeholder} value={wordEntered} onChange={handleFilter} />\r\n        <div className='searchIcon' />\r\n      </div>\r\n      {filteredData.length !== 0 && (\r\n        <div className='dataResults'>\r\n          {filteredData.slice(0, 5).map((value, index) => {\r\n            return (\r\n              <p key={index} onClick={() => handleClick(value)}>\r\n                {value}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC;AAEzB,SAASC,SAAS,OAAwB;EAAA;EAAA,IAAvB;IAAEC,WAAW;IAAEC;EAAK,CAAC;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCL,cAAc,CAACG,UAAU,CAAC;IAC1B,MAAMG,SAAS,GAAGV,IAAI,CAACW,MAAM,CAAEF,KAAK,IAAK;MACvC,OAAOA,KAAK,CAACG,WAAW,EAAE,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,EAAE,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAIL,UAAU,KAAK,EAAE,EAAE;MACrBL,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAACQ,SAAS,CAAC;IAC5B;EACF,CAAC;EAED,MAAMI,WAAW,GAAIL,KAAK,IAAK;IAC7BL,cAAc,CAACK,KAAK,CAAC;IACrBP,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACrB;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAEH,WAAY;QAAC,KAAK,EAAEI,WAAY;QAAC,QAAQ,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3F;QAAK,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B,EACLJ,YAAY,CAACc,MAAM,KAAK,CAAC,iBACxB;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBd,YAAY,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACR,KAAK,EAAES,KAAK,KAAK;QAC9C,oBACE;UAAe,OAAO,EAAE,MAAMJ,WAAW,CAACL,KAAK,CAAE;UAAA,UAC9CA;QAAK,GADAS,KAAK;UAAA;UAAA;UAAA;QAAA,QAET;MAER,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA1CQpB,SAAS;AAAA,KAATA,SAAS;AA4ClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}