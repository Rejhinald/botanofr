{"ast":null,"code":"import _slicedToArray from\"C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{PayPalScriptProvider,PayPalButtons}from'@paypal/react-paypal-js';import{paymentUserSuccess,updateSubscriptionId,updateAccount}from'../actions/accountActions';import{jsx as _jsx}from\"react/jsx-runtime\";var PLAN_ID='P-28D816824R709661FMQQ5WMQ';var ButtonWrapper=function ButtonWrapper(_ref){var type=_ref.type;var _useState=useState('subscription'),_useState2=_slicedToArray(_useState,2),intent=_useState2[0],setIntent=_useState2[1];var dispatch=useDispatch();useEffect(function(){setIntent('subscription');},[type]);var userInfo=useSelector(function(state){return state.userLogin.userInfo;});var dispatchPaymentUserSuccess=useMemo(function(){return function(){return dispatch(paymentUserSuccess());};},[dispatch]);var dispatchUpdateSubscriptionId=useMemo(function(){return function(orderId){return dispatch(updateSubscriptionId(orderId));};},[dispatch]);var dispatchUpdateAccount=useMemo(function(){return function(plan_id){return dispatch(updateAccount({plan_id:plan_id}));};},[dispatch]);var handleApprove=function handleApprove(data,actions){dispatchPaymentUserSuccess();dispatchUpdateAccount(PLAN_ID);};return/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{intent:intent},children:/*#__PURE__*/_jsx(PayPalButtons,{createSubscription:function createSubscription(data,actions){return actions.subscription.create({plan_id:PLAN_ID}).then(function(orderId){console.log(orderId);dispatchUpdateSubscriptionId(orderId);return orderId;});},onApprove:handleApprove,style:{shape:'rect',color:'blue',layout:'vertical',label:'subscribe'}})});};export default ButtonWrapper;","map":{"version":3,"names":["React","useEffect","useMemo","useState","useDispatch","useSelector","PayPalScriptProvider","PayPalButtons","paymentUserSuccess","updateSubscriptionId","updateAccount","PLAN_ID","ButtonWrapper","type","intent","setIntent","dispatch","userInfo","state","userLogin","dispatchPaymentUserSuccess","dispatchUpdateSubscriptionId","orderId","dispatchUpdateAccount","plan_id","handleApprove","data","actions","subscription","create","then","console","log","shape","color","layout","label"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/src/components/ButtonWrapper.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons\r\n} from '@paypal/react-paypal-js';\r\nimport { paymentUserSuccess, updateSubscriptionId, updateAccount } from '../actions/accountActions';\r\n\r\nconst PLAN_ID = 'P-28D816824R709661FMQQ5WMQ';\r\n\r\nconst ButtonWrapper = ({ type }) => {\r\n  const [intent, setIntent] = useState('subscription');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIntent('subscription');\r\n  }, [type]);\r\n\r\n  const userInfo = useSelector((state) => state.userLogin.userInfo);\r\n  const dispatchPaymentUserSuccess = useMemo(() => {\r\n    return () => dispatch(paymentUserSuccess());\r\n  }, [dispatch]);\r\n\r\n  const dispatchUpdateSubscriptionId = useMemo(() => {\r\n    return (orderId) => dispatch(updateSubscriptionId(orderId));\r\n  }, [dispatch]);\r\n\r\n  const dispatchUpdateAccount = useMemo(() => {\r\n    return (plan_id) => dispatch(updateAccount({ plan_id }));\r\n  }, [dispatch]);\r\n\r\n  const handleApprove = (data, actions) => {\r\n    dispatchPaymentUserSuccess();\r\n    dispatchUpdateAccount(PLAN_ID);\r\n  };\r\n\r\n  return (\r\n    <PayPalScriptProvider options={{ intent }}>\r\n      <PayPalButtons\r\n        createSubscription={(data, actions) => {\r\n          return actions.subscription\r\n            .create({\r\n              plan_id: PLAN_ID,\r\n            })\r\n            .then((orderId) => {\r\n              console.log(orderId);\r\n              dispatchUpdateSubscriptionId(orderId);\r\n              return orderId;\r\n            });\r\n        }}\r\n        onApprove={handleApprove}\r\n        style={{\r\n          shape: 'rect',\r\n          color: 'blue',\r\n          layout: 'vertical',\r\n          label: 'subscribe',\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default ButtonWrapper;\r\n"],"mappings":"wIAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAC3D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OACEC,oBAAoB,CACpBC,aAAa,KACR,yBAAyB,CAChC,OAASC,kBAAkB,CAAEC,oBAAoB,CAAEC,aAAa,KAAQ,2BAA2B,CAAC,2CAEpG,GAAMC,QAAO,CAAG,4BAA4B,CAE5C,GAAMC,cAAa,CAAG,QAAhBA,cAAa,MAAiB,IAAXC,KAAI,MAAJA,IAAI,CAC3B,cAA4BV,QAAQ,CAAC,cAAc,CAAC,wCAA7CW,MAAM,eAAEC,SAAS,eACxB,GAAMC,SAAQ,CAAGZ,WAAW,EAAE,CAE9BH,SAAS,CAAC,UAAM,CACdc,SAAS,CAAC,cAAc,CAAC,CAC3B,CAAC,CAAE,CAACF,IAAI,CAAC,CAAC,CAEV,GAAMI,SAAQ,CAAGZ,WAAW,CAAC,SAACa,KAAK,QAAKA,MAAK,CAACC,SAAS,CAACF,QAAQ,GAAC,CACjE,GAAMG,2BAA0B,CAAGlB,OAAO,CAAC,UAAM,CAC/C,MAAO,kBAAMc,SAAQ,CAACR,kBAAkB,EAAE,CAAC,GAC7C,CAAC,CAAE,CAACQ,QAAQ,CAAC,CAAC,CAEd,GAAMK,6BAA4B,CAAGnB,OAAO,CAAC,UAAM,CACjD,MAAO,UAACoB,OAAO,QAAKN,SAAQ,CAACP,oBAAoB,CAACa,OAAO,CAAC,CAAC,GAC7D,CAAC,CAAE,CAACN,QAAQ,CAAC,CAAC,CAEd,GAAMO,sBAAqB,CAAGrB,OAAO,CAAC,UAAM,CAC1C,MAAO,UAACsB,OAAO,QAAKR,SAAQ,CAACN,aAAa,CAAC,CAAEc,OAAO,CAAPA,OAAQ,CAAC,CAAC,CAAC,GAC1D,CAAC,CAAE,CAACR,QAAQ,CAAC,CAAC,CAEd,GAAMS,cAAa,CAAG,QAAhBA,cAAa,CAAIC,IAAI,CAAEC,OAAO,CAAK,CACvCP,0BAA0B,EAAE,CAC5BG,qBAAqB,CAACZ,OAAO,CAAC,CAChC,CAAC,CAED,mBACE,KAAC,oBAAoB,EAAC,OAAO,CAAE,CAAEG,MAAM,CAANA,MAAO,CAAE,uBACxC,KAAC,aAAa,EACZ,kBAAkB,CAAE,4BAACY,IAAI,CAAEC,OAAO,CAAK,CACrC,MAAOA,QAAO,CAACC,YAAY,CACxBC,MAAM,CAAC,CACNL,OAAO,CAAEb,OACX,CAAC,CAAC,CACDmB,IAAI,CAAC,SAACR,OAAO,CAAK,CACjBS,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC,CACpBD,4BAA4B,CAACC,OAAO,CAAC,CACrC,MAAOA,QAAO,CAChB,CAAC,CAAC,CACN,CAAE,CACF,SAAS,CAAEG,aAAc,CACzB,KAAK,CAAE,CACLQ,KAAK,CAAE,MAAM,CACbC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,UAAU,CAClBC,KAAK,CAAE,WACT,CAAE,EACF,EACmB,CAE3B,CAAC,CAED,cAAexB,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}