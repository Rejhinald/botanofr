{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import{Card}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Plant=function Plant(_ref){var plant=_ref.plant;return/*#__PURE__*/_jsxs(Card,{className:\"my-3 py-3 rounded\",children:[/*#__PURE__*/_jsx(Link,{to:\"/plant/\".concat(plant._id),children:/*#__PURE__*/_jsx(Card.Img,{src:plant.image,variant:\"top\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Link,{to:\"/plant/\".concat(plant._id),children:/*#__PURE__*/_jsx(Card.Title,{as:\"div\",children:/*#__PURE__*/_jsx(\"strong\",{children:plant.name})})})})]});};export default Plant;","map":{"version":3,"names":["React","Link","Card","Plant","plant","_id","image","name"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/src/components/Plant.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Plant = ({ plant }) => {\r\n  return (\r\n    <Card className=\"my-3 py-3 rounded\">\r\n      <Link to={`/plant/${plant._id}`}>\r\n        <Card.Img src={plant.image} variant=\"top\" />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/plant/${plant._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{plant.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,IAAI,KAAQ,iBAAiB,CAAC,wFAEvC,GAAMC,MAAK,CAAG,QAARA,MAAK,MAAkB,IAAZC,MAAK,MAALA,KAAK,CACpB,mBACE,MAAC,IAAI,EAAC,SAAS,CAAC,mBAAmB,wBACjC,KAAC,IAAI,EAAC,EAAE,kBAAYA,KAAK,CAACC,GAAG,CAAG,uBAC9B,KAAC,IAAI,CAAC,GAAG,EAAC,GAAG,CAAED,KAAK,CAACE,KAAM,CAAC,OAAO,CAAC,KAAK,EAAG,EACvC,cACP,KAAC,IAAI,CAAC,IAAI,wBACR,KAAC,IAAI,EAAC,EAAE,kBAAYF,KAAK,CAACC,GAAG,CAAG,uBAC9B,KAAC,IAAI,CAAC,KAAK,EAAC,EAAE,CAAC,KAAK,uBAClB,wBAASD,KAAK,CAACG,IAAI,EAAU,EAClB,EACR,EACG,GACP,CAEX,CAAC,CAED,cAAeJ,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}