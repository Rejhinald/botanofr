{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { LinkContainer } from \"react-router-bootstrap\";\n// import { Table, Button, Row, Col } from \"react-bootstrap\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   listPlants,\n//   listPlantDetails,\n//   createPlants,\n// } from \"../actions/plantActions\";\n// import { PLANT_CREATE_RESET } from \"../constants/plantConstants\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// function PlantListScreen({ match, history }) {\n//   const dispatch = useDispatch();\n//   const location = useLocation();\n//   const navigation = useNavigate();\n//   const productList = useSelector((state) => state.productList);\n//   const { products, pages, page, loading, error } = productList;\n//   const productDelete = useSelector((state) => state.productDelete);\n//   const {\n//     success: successDelete,\n//     loading: loadingDelete,\n//     error: errorDelete,\n//   } = productDelete;\n//   const productCreate = useSelector((state) => state.productCreate);\n//   const {\n//     product: createdProduct,\n//     success: successCreate,\n//     loading: loadingCreate,\n//     error: errorCreate,\n//   } = productCreate;\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   let keyword = location.search;\n//   useEffect(() => {\n//     dispatch({ type: PRODUCT_CREATE_RESET });\n//     if (!userInfo.admin) {\n//       navigation(\"/login\");\n//     }\n//     if (successCreate) {\n//       navigation(`/admin/product/${createdProduct._id}/edit`);\n//     } else {\n//       dispatch(getListProducts(keyword));\n//     }\n//   }, [\n//     dispatch,\n//     history,\n//     userInfo,\n//     successDelete,\n//     successCreate,\n//     createdPlants,\n//     keyword,\n//   ]);\n//   /* HANDLER */\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this product ?\")) {\n//       dispatch(deleteProduct(id));\n//     }\n//   };\n//   const createProcutHandler = () => {\n//     dispatch(createProduct());\n//   };\n//   return (\n//     <div>\n//       <Row className=\"align-items-center\">\n//         <Col>\n//           <h1>Products</h1>\n//         </Col>\n//         <Col className=\"text-end\">\n//           <Button className=\"my-3\" onClick={createProcutHandler}>\n//             <i className=\"fas fa-plus\"></i> Create Product\n//           </Button>\n//         </Col>\n//       </Row>\n//       {loadingCreate && <Loader />}\n//       {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n//       {loadingDelete && <Loader />}\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <div>\n//           <Table striped bordered hover responsive className=\"table-lg\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>NAME</th>\n//                 <th>PRICE</th>\n//                 <th>STOCKS</th>\n//                 <th>RATES</th>\n//                 <th>REVIEWS</th>\n//                 <th></th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product._id}>\n//                   <td>{product._id}</td>\n//                   <td>{product.name}</td>\n//                   <td>₱{product.price}</td>\n//                   <td>{product.countInStock}</td>\n//                   <td>{product.rating}</td>\n//                   <td>{product.numReviews}</td>\n//                   <td>\n//                     <LinkContainer to={`/admin/product/${product._id}/edit`}>\n//                       <Button variant=\"light\" className=\"btn-sm\">\n//                         <i className=\"fas fa-edit\"></i>\n//                       </Button>\n//                     </LinkContainer>\n//                     <Button\n//                       variant=\"danger\"\n//                       className=\"btn-sm\"\n//                       onClick={() => deleteHandler(product._id)}\n//                     >\n//                       <i className=\"fas fa-trash\"></i>\n//                     </Button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </Table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default PlantListScreen;","map":{"version":3,"names":[],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/frontend/src/screens/PlantList.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { LinkContainer } from \"react-router-bootstrap\";\r\n// import { Table, Button, Row, Col } from \"react-bootstrap\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   listPlants,\r\n//   listPlantDetails,\r\n//   createPlants,\r\n// } from \"../actions/plantActions\";\r\n\r\n// import { PLANT_CREATE_RESET } from \"../constants/plantConstants\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\n// function PlantListScreen({ match, history }) {\r\n//   const dispatch = useDispatch();\r\n//   const location = useLocation();\r\n//   const navigation = useNavigate();\r\n\r\n//   const productList = useSelector((state) => state.productList);\r\n//   const { products, pages, page, loading, error } = productList;\r\n\r\n//   const productDelete = useSelector((state) => state.productDelete);\r\n//   const {\r\n//     success: successDelete,\r\n//     loading: loadingDelete,\r\n//     error: errorDelete,\r\n//   } = productDelete;\r\n\r\n//   const productCreate = useSelector((state) => state.productCreate);\r\n//   const {\r\n//     product: createdProduct,\r\n//     success: successCreate,\r\n//     loading: loadingCreate,\r\n//     error: errorCreate,\r\n//   } = productCreate;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   let keyword = location.search;\r\n\r\n//   useEffect(() => {\r\n//     dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n//     if (!userInfo.admin) {\r\n//       navigation(\"/login\");\r\n//     }\r\n\r\n//     if (successCreate) {\r\n//       navigation(`/admin/product/${createdProduct._id}/edit`);\r\n//     } else {\r\n//       dispatch(getListProducts(keyword));\r\n//     }\r\n//   }, [\r\n//     dispatch,\r\n//     history,\r\n//     userInfo,\r\n//     successDelete,\r\n//     successCreate,\r\n//     createdPlants,\r\n//     keyword,\r\n//   ]);\r\n\r\n//   /* HANDLER */\r\n//   const deleteHandler = (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this product ?\")) {\r\n//       dispatch(deleteProduct(id));\r\n//     }\r\n//   };\r\n\r\n//   const createProcutHandler = () => {\r\n//     dispatch(createProduct());\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Row className=\"align-items-center\">\r\n//         <Col>\r\n//           <h1>Products</h1>\r\n//         </Col>\r\n\r\n//         <Col className=\"text-end\">\r\n//           <Button className=\"my-3\" onClick={createProcutHandler}>\r\n//             <i className=\"fas fa-plus\"></i> Create Product\r\n//           </Button>\r\n//         </Col>\r\n//       </Row>\r\n\r\n//       {loadingCreate && <Loader />}\r\n//       {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n//       {loadingDelete && <Loader />}\r\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <div>\r\n//           <Table striped bordered hover responsive className=\"table-lg\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>ID</th>\r\n//                 <th>NAME</th>\r\n//                 <th>PRICE</th>\r\n//                 <th>STOCKS</th>\r\n//                 <th>RATES</th>\r\n//                 <th>REVIEWS</th>\r\n\r\n//                 <th></th>\r\n//               </tr>\r\n//             </thead>\r\n\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product._id}>\r\n//                   <td>{product._id}</td>\r\n//                   <td>{product.name}</td>\r\n//                   <td>₱{product.price}</td>\r\n//                   <td>{product.countInStock}</td>\r\n//                   <td>{product.rating}</td>\r\n//                   <td>{product.numReviews}</td>\r\n\r\n//                   <td>\r\n//                     <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n//                       <Button variant=\"light\" className=\"btn-sm\">\r\n//                         <i className=\"fas fa-edit\"></i>\r\n//                       </Button>\r\n//                     </LinkContainer>\r\n\r\n//                     <Button\r\n//                       variant=\"danger\"\r\n//                       className=\"btn-sm\"\r\n//                       onClick={() => deleteHandler(product._id)}\r\n//                     >\r\n//                       <i className=\"fas fa-trash\"></i>\r\n//                     </Button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </Table>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PlantListScreen;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}