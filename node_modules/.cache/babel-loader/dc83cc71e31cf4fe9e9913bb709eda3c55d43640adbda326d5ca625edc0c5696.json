{"ast":null,"code":"import { ACCOUNT_ADD_REQUEST, ACCOUNT_ADD_SUCCESS, ACCOUNT_ADD_FAIL, ACCOUNT_UPDATE_REQUEST, ACCOUNT_UPDATE_SUCCESS, ACCOUNT_UPDATE_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_PAYMENT_REQUEST, USER_PAYMENT_SUCCESS, USER_PAYMENT_FAIL, CANCEL_SUBSCRIPTION_REQUEST, CANCEL_SUBSCRIPTION_SUCCESS, CANCEL_SUBSCRIPTION_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL } from \"../constants/accountConstants\";\nimport axios from \"axios\";\nexport const addAccount = account => async dispatch => {\n  try {\n    dispatch({\n      type: ACCOUNT_ADD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/auth/register/\", account); //create a new product\n\n    dispatch({\n      type: ACCOUNT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/auth/login/\", {\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.details ? error.response.data.details : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const updateAccount = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ACCOUNT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/auth/updateuser/`, user, config);\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n    const updatedUserInfo = {\n      ...userInfo,\n      ...data\n    };\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: updatedUserInfo\n    });\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateSubscriptionId = (user, orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ACCOUNT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const updatedUser = {\n      ...user,\n      orderId: orderId\n    };\n    const {\n      data\n    } = await axios.put(\"http://127.0.0.1:8000/auth/subscriptionId/\", updatedUser, config);\n    console.log(user);\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n    const updatedUserInfo = {\n      ...userInfo,\n      ...data\n      // 'subscription_id': user,\n    };\n\n    // dispatch({\n    //   type: USER_LOGIN_SUCCESS,\n    //   payload: updatedUserInfo,\n    // });\n    // localStorage.removeItem(\"userInfo\");\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const paymentUserSuccess = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PAYMENT_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"http://127.0.0.1:8000/auth/updatepayment/\", user, config); //create a new product\n\n    dispatch({\n      type: USER_PAYMENT_SUCCESS,\n      payload: data\n    });\n    const updatedUserInfo = {\n      ...userInfo,\n      ...data\n    };\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: updatedUserInfo\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\n  } catch (error) {\n    dispatch({\n      type: USER_PAYMENT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const cancelSubscriptionUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"http://127.0.0.1:8000/auth/cancelsubscription/\", user, config);\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_SUCCESS,\n      payload: data\n    });\n    const updatedUserInfo = {\n      ...userInfo,\n      ...data\n    };\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: updatedUserInfo\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\n  } catch (error) {\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const cancelSubscription = (id, user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/auth/cancelsubscription/${id}`, user, config);\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CANCEL_SUBSCRIPTION_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/auth/user/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: {\n        ...data,\n        planId: data.planId,\n        subscription_id: data.subscription_id // add subscription_id to the userInfo object\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.details ? error.response.data.details : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/auth/userlist\", config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserInfo = (id, user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ACCOUNT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/auth/updateuserinfo/${id}`, user, config);\n    dispatch({\n      type: ACCOUNT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ACCOUNT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["ACCOUNT_ADD_REQUEST","ACCOUNT_ADD_SUCCESS","ACCOUNT_ADD_FAIL","ACCOUNT_UPDATE_REQUEST","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_PAYMENT_REQUEST","USER_PAYMENT_SUCCESS","USER_PAYMENT_FAIL","CANCEL_SUBSCRIPTION_REQUEST","CANCEL_SUBSCRIPTION_SUCCESS","CANCEL_SUBSCRIPTION_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","axios","addAccount","account","dispatch","type","data","post","payload","error","response","message","login","email","password","config","headers","localStorage","setItem","JSON","stringify","details","logout","removeItem","updateAccount","user","getState","userLogin","userInfo","Authorization","access","put","updatedUserInfo","updateSubscriptionId","orderId","updatedUser","console","log","paymentUserSuccess","cancelSubscriptionUser","cancelSubscription","id","getUserDetails","get","planId","subscription_id","listUsers","updateUserInfo"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/frontend/src/actions/accountActions.js"],"sourcesContent":["import {\r\n  ACCOUNT_ADD_REQUEST,\r\n  ACCOUNT_ADD_SUCCESS,\r\n  ACCOUNT_ADD_FAIL,\r\n  ACCOUNT_UPDATE_REQUEST,\r\n  ACCOUNT_UPDATE_SUCCESS,\r\n  ACCOUNT_UPDATE_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_PAYMENT_REQUEST,\r\n  USER_PAYMENT_SUCCESS,\r\n  USER_PAYMENT_FAIL,\r\n  CANCEL_SUBSCRIPTION_REQUEST,\r\n  CANCEL_SUBSCRIPTION_SUCCESS,\r\n  CANCEL_SUBSCRIPTION_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n} from \"../constants/accountConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addAccount = (account) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ACCOUNT_ADD_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"http://127.0.0.1:8000/auth/register/\", account); //create a new product\r\n\r\n    dispatch({\r\n      type: ACCOUNT_ADD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_ADD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"http://127.0.0.1:8000/auth/login/\",\r\n      { email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.details\r\n          ? error.response.data.details\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const updateAccount = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`http://127.0.0.1:8000/auth/updateuser/`, user, config);\r\n\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    const updatedUserInfo = {\r\n      ...userInfo,\r\n      ...data,\r\n    };\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: updatedUserInfo,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateSubscriptionId =\r\n  (user, orderId) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ACCOUNT_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.access}`,\r\n        },\r\n      };\r\n\r\n      const updatedUser = {\r\n        ...user,\r\n        orderId: orderId,\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"http://127.0.0.1:8000/auth/subscriptionId/\",\r\n        updatedUser,\r\n        config\r\n      );\r\n      \r\n      console.log(user);\r\n      dispatch({\r\n        type: ACCOUNT_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      const updatedUserInfo = {\r\n        ...userInfo,\r\n        ...data,\r\n        // 'subscription_id': user,\r\n      };\r\n\r\n      // dispatch({\r\n      //   type: USER_LOGIN_SUCCESS,\r\n      //   payload: updatedUserInfo,\r\n      // });\r\n      // localStorage.removeItem(\"userInfo\");\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ACCOUNT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\nexport const paymentUserSuccess = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PAYMENT_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"http://127.0.0.1:8000/auth/updatepayment/\", user, config); //create a new product\r\n\r\n    dispatch({\r\n      type: USER_PAYMENT_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    const updatedUserInfo = {\r\n      ...userInfo,\r\n      ...data,\r\n    };\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: updatedUserInfo,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PAYMENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cancelSubscriptionUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"http://127.0.0.1:8000/auth/cancelsubscription/\", user, config); \r\n\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    const updatedUserInfo = {\r\n      ...userInfo,\r\n      ...data,\r\n    };\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: updatedUserInfo,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cancelSubscription = (id, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`http://127.0.0.1:8000/auth/cancelsubscription/${id}`, user , config); \r\n\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CANCEL_SUBSCRIPTION_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`http://127.0.0.1:8000/auth/user/${id}`, config);\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: {\r\n        ...data,\r\n        planId: data.planId,\r\n        subscription_id: data.subscription_id, // add subscription_id to the userInfo object\r\n      },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.details\r\n          ? error.response.data.details\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"http://127.0.0.1:8000/auth/userlist\", config); \r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserInfo = (id, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.access}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`http://127.0.0.1:8000/auth/updateuserinfo/${id}`, user, config, );\r\n\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}