{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arwin Miclat\\\\Desktop\\\\Botano\\\\Botano\\\\botano\\\\src\\\\screens\\\\Plantscreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Col, Row, Image, ListGroup, ListGroupItem, Card, Button, Form } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listPlantDetails } from '../actions/plantActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plantscreen = _ref => {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const plantDetails = useSelector(state => state.plantDetails);\n  const {\n    loading,\n    error,\n    plant\n  } = plantDetails;\n  useEffect(() => {\n    dispatch(listPlantDetails(id));\n  }, [dispatch, match]);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  if (!userInfo) {\n    navigate(\"/login\");\n  } else {\n    if (!userInfo.isSubscriber) {\n      navigate(\"/subscription\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/search \",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: plant.image,\n          alt: plant.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: plant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: \", plant.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Location: \", plant.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Local Areas: \", plant.local_areas]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Season:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: plant.season\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Plantscreen, \"CC8tRykhDDfaY/H8pATxOfIUZ6w=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = Plantscreen;\nexport default Plantscreen;\nvar _c;\n$RefreshReg$(_c, \"Plantscreen\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Col","Row","Image","ListGroup","ListGroupItem","Card","Button","Form","Loader","Message","useDispatch","useSelector","listPlantDetails","Plantscreen","match","id","dispatch","plantDetails","state","loading","error","plant","userLogin","userInfo","navigate","isSubscriber","image","name","description","location","local_areas","season"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/src/screens/Plantscreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Image, ListGroup, ListGroupItem, Card, Button, Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listPlantDetails } from '../actions/plantActions'\r\n\r\nconst Plantscreen = ({ match }) => {\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n    const plantDetails = useSelector(state => state.plantDetails)\r\n    const { loading, error, plant } = plantDetails\r\n\r\n    useEffect (() => {\r\n        dispatch(listPlantDetails(id))\r\n  \r\n  }, [dispatch, match])\r\n  \r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  \r\n  if (!userInfo) {\r\n    navigate(\"/login\");\r\n  } else {\r\n    if (!userInfo.isSubscriber) {\r\n      navigate(\"/subscription\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Link className='btn btn-dark my-3' to='/search '>\r\n            Go Back\r\n        </Link>\r\n        {loading ?\r\n            <Loader/>\r\n            : error\r\n                ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Row>\r\n            <Col md={6}>\r\n                <Image src={plant.image} alt={plant.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{plant.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {plant.description}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Location: {plant.location}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Local Areas: {plant.local_areas}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Season:\r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>{plant.season}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n            )\r\n        }\r\n        \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Plantscreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}