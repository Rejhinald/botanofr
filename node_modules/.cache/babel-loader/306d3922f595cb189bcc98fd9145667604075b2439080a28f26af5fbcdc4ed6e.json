{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arwin Miclat\\\\Desktop\\\\Botano\\\\Botano\\\\botano\\\\src\\\\components\\\\ButtonWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { paymentUserSuccess, updateSubscriptionId, updateAccount } from '../actions/accountActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAN_ID = 'P-8U773388PW8654051MQQ5TNQ';\nconst ButtonWrapper = _ref => {\n  _s();\n  let {\n    type\n  } = _ref;\n  const [intent, setIntent] = useState('subscription');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIntent('subscription');\n  }, [type]);\n  const userInfo = useSelector(state => state.userLogin.userInfo);\n  const dispatchPaymentUserSuccess = useMemo(() => {\n    return () => dispatch(paymentUserSuccess());\n  }, [dispatch]);\n  const dispatchUpdateSubscriptionId = useMemo(() => {\n    return orderId => dispatch(updateSubscriptionId(orderId));\n  }, [dispatch]);\n  const dispatchUpdateAccount = useMemo(() => {\n    return plan_id => dispatch(updateAccount({\n      plan_id\n    }));\n  }, [dispatch]);\n  const handleApprove = (data, actions) => {\n    dispatchPaymentUserSuccess();\n    dispatchUpdateAccount(PLAN_ID);\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      intent\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      createSubscription: (data, actions) => {\n        return actions.subscription.create({\n          plan_id: PLAN_ID\n        }).then(orderId => {\n          console.log(orderId);\n          dispatchUpdateSubscriptionId(orderId);\n          return orderId;\n        });\n      },\n      onApprove: handleApprove,\n      style: {\n        shape: 'rect',\n        color: 'blue',\n        layout: 'vertical',\n        label: 'subscribe'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonWrapper, \"Jn8R0DXOYTuTl8TgTxyKDhhRPAg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ButtonWrapper;\nexport default ButtonWrapper;\nvar _c;\n$RefreshReg$(_c, \"ButtonWrapper\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useDispatch","useSelector","PayPalScriptProvider","PayPalButtons","paymentUserSuccess","updateSubscriptionId","updateAccount","PLAN_ID","ButtonWrapper","type","intent","setIntent","dispatch","userInfo","state","userLogin","dispatchPaymentUserSuccess","dispatchUpdateSubscriptionId","orderId","dispatchUpdateAccount","plan_id","handleApprove","data","actions","subscription","create","then","console","log","shape","color","layout","label"],"sources":["C:/Users/Arwin Miclat/Desktop/Botano/Botano/botano/src/components/ButtonWrapper.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons\r\n} from '@paypal/react-paypal-js';\r\nimport { paymentUserSuccess, updateSubscriptionId, updateAccount } from '../actions/accountActions';\r\n\r\nconst PLAN_ID = 'P-8U773388PW8654051MQQ5TNQ';\r\n\r\nconst ButtonWrapper = ({ type }) => {\r\n  const [intent, setIntent] = useState('subscription');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIntent('subscription');\r\n  }, [type]);\r\n\r\n  const userInfo = useSelector((state) => state.userLogin.userInfo);\r\n  const dispatchPaymentUserSuccess = useMemo(() => {\r\n    return () => dispatch(paymentUserSuccess());\r\n  }, [dispatch]);\r\n\r\n  const dispatchUpdateSubscriptionId = useMemo(() => {\r\n    return (orderId) => dispatch(updateSubscriptionId(orderId));\r\n  }, [dispatch]);\r\n\r\n  const dispatchUpdateAccount = useMemo(() => {\r\n    return (plan_id) => dispatch(updateAccount({ plan_id }));\r\n  }, [dispatch]);\r\n\r\n  const handleApprove = (data, actions) => {\r\n    dispatchPaymentUserSuccess();\r\n    dispatchUpdateAccount(PLAN_ID);\r\n  };\r\n\r\n  return (\r\n    <PayPalScriptProvider options={{ intent }}>\r\n      <PayPalButtons\r\n        createSubscription={(data, actions) => {\r\n          return actions.subscription\r\n            .create({\r\n              plan_id: PLAN_ID,\r\n            })\r\n            .then((orderId) => {\r\n              console.log(orderId);\r\n              dispatchUpdateSubscriptionId(orderId);\r\n              return orderId;\r\n            });\r\n        }}\r\n        onApprove={handleApprove}\r\n        style={{\r\n          shape: 'rect',\r\n          color: 'blue',\r\n          layout: 'vertical',\r\n          label: 'subscribe',\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default ButtonWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,oBAAoB,EACpBC,aAAa,QACR,yBAAyB;AAChC,SAASC,kBAAkB,EAAEC,oBAAoB,EAAEC,aAAa,QAAQ,2BAA2B;AAAC;AAEpG,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,aAAa,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,cAAc,CAAC;EACpD,MAAMa,QAAQ,GAAGZ,WAAW,EAAE;EAE9BH,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,cAAc,CAAC;EAC3B,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,MAAMI,QAAQ,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACF,QAAQ,CAAC;EACjE,MAAMG,0BAA0B,GAAGlB,OAAO,CAAC,MAAM;IAC/C,OAAO,MAAMc,QAAQ,CAACR,kBAAkB,EAAE,CAAC;EAC7C,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,MAAMK,4BAA4B,GAAGnB,OAAO,CAAC,MAAM;IACjD,OAAQoB,OAAO,IAAKN,QAAQ,CAACP,oBAAoB,CAACa,OAAO,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMO,qBAAqB,GAAGrB,OAAO,CAAC,MAAM;IAC1C,OAAQsB,OAAO,IAAKR,QAAQ,CAACN,aAAa,CAAC;MAAEc;IAAQ,CAAC,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,aAAa,GAAG,CAACC,IAAI,EAAEC,OAAO,KAAK;IACvCP,0BAA0B,EAAE;IAC5BG,qBAAqB,CAACZ,OAAO,CAAC;EAChC,CAAC;EAED,oBACE,QAAC,oBAAoB;IAAC,OAAO,EAAE;MAAEG;IAAO,CAAE;IAAA,uBACxC,QAAC,aAAa;MACZ,kBAAkB,EAAE,CAACY,IAAI,EAAEC,OAAO,KAAK;QACrC,OAAOA,OAAO,CAACC,YAAY,CACxBC,MAAM,CAAC;UACNL,OAAO,EAAEb;QACX,CAAC,CAAC,CACDmB,IAAI,CAAER,OAAO,IAAK;UACjBS,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;UACpBD,4BAA4B,CAACC,OAAO,CAAC;UACrC,OAAOA,OAAO;QAChB,CAAC,CAAC;MACN,CAAE;MACF,SAAS,EAAEG,aAAc;MACzB,KAAK,EAAE;QACLQ,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,UAAU;QAClBC,KAAK,EAAE;MACT;IAAE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACmB;AAE3B,CAAC;AAAC,GAlDIxB,aAAa;EAAA,QAEAR,WAAW,EAMXC,WAAW;AAAA;AAAA,KARxBO,aAAa;AAoDnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}